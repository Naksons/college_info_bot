import json
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes


# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
def load_data(filename):
    with open(f"data/{filename}", "r", encoding="utf-8") as f:
        return json.load(f)


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = """
    üéì <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç –∫–æ–ª–ª–µ–¥–∂–∞!</b>

    –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
    /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
    /help - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
    /schedule - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤
    /contacts - –ö–æ–Ω—Ç–∞–∫—Ç—ã –æ—Ç–¥–µ–ª–æ–≤
    /news - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
    /faq - –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    """
    await update.message.reply_text(help_text, parse_mode="HTML")


# –ö–æ–º–∞–Ω–¥–∞ /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await start(update, context)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ –≤ /start


# –ö–æ–º–∞–Ω–¥–∞ /contacts
async def send_contacts(update: Update, context: ContextTypes.DEFAULT_TYPE):
    contacts = """
    üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã –æ—Ç–¥–µ–ª–æ–≤:</b>

    <b>–ü—Ä–∏—ë–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è:</b>
    –¢–µ–ª–µ—Ñ–æ–Ω: +7(863)210-79-94

    <b>–ó–∞–º. –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞:</b>
  –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –ø–æ —É—á–µ–±–Ω–æ–π —Ä–∞–±–æ—Ç–µ. –¢–µ–ª–µ—Ñ–æ–Ω: +7(863)267-34-33
  –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –ø–æ –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ. –¢–µ–ª–µ—Ñ–æ–Ω: +7(863)267-53-44
    <b>–ö–∞–Ω—Ü–µ–ª—è—Ä–∏—è:</b>
    –¢–µ–ª–µ—Ñ–æ–Ω: +7(863)267-51-77
    """
    await update.message.reply_text(contacts, parse_mode="HTML")


# –ö–æ–º–∞–Ω–¥–∞ /schedule
async def send_schedule(update: Update, context: ContextTypes.DEFAULT_TYPE):
    schedule = """
    üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤:</b>
    1 –ø–∞—Ä–∞: 8:00 - 9:35
    2 –ø–∞—Ä–∞: 9:45 - 11:20
    3 –ø–∞—Ä–∞: 11:50 - 13:25
    4 –ø–∞—Ä–∞: 13:35 - 15:10
    5 –ø–∞—Ä–∞: 15:20 - 16:55
    6 –ø–∞—Ä–∞: 17:05 - 18:40
    7 –ø–∞—Ä–∞: 18:50 - 20:35
    """
    await update.message.reply_text(schedule, parse_mode="HTML")


# –ö–æ–º–∞–Ω–¥–∞ /news
async def send_news(update: Update, context: ContextTypes.DEFAULT_TYPE):
    news = load_data("news.json")[:3]  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –Ω–æ–≤–æ—Å—Ç–∏
    response = "üì¢ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏:</b>\n" + "\n".join([f"{n['date']}: {n['text']}" for n in news])
    await update.message.reply_text(response, parse_mode="HTML")


# –ö–æ–º–∞–Ω–¥–∞ /faq —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def send_faq(update: Update, context: ContextTypes.DEFAULT_TYPE):
    faq = load_data("faq.json")
    keyboard = [[InlineKeyboardButton(q, callback_data=q)] for q in faq.keys()]
    await update.message.reply_text("‚ùì <b>–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:</b>",
                                    reply_markup=InlineKeyboardMarkup(keyboard),
                                    parse_mode="HTML")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ FAQ
async def faq_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    faq = load_data("faq.json")
    await query.answer()
    await query.edit_message_text(text=f"‚ùì <b>{query.data}</b>\n\n{faq[query.data]}",
                                  parse_mode="HTML")


def main():
    app = Application.builder().token("7572317798:AAFLOyja0VXANOW_ad-NexUxNYMt5Lk5AUY").build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("contacts", send_contacts))
    app.add_handler(CommandHandler("schedule", send_schedule))
    app.add_handler(CommandHandler("news", send_news))
    app.add_handler(CommandHandler("faq", send_faq))
    app.add_handler(CallbackQueryHandler(faq_button))

    app.run_polling()


if __name__ == "__main__":
    main()